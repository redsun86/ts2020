<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.AD500uMapper">
    <resultMap id="BaseProductResultMap" type="com.esst.ts.model.Product">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_code" property="productCode" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_name2" property="productName2" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseTechnologyResultMap" type="com.esst.ts.model.Technology">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="technology_code" property="technologyCode" jdbcType="VARCHAR"/>
        <result column="technology_zh_name" property="technologyZhName" jdbcType="VARCHAR"/>
        <result column="technology_en_name" property="technologyEnName" jdbcType="VARCHAR"/>
        <result column="style_id" property="styleId" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseTaskResultMap" type="com.esst.ts.model.Task">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="task_code" property="taskCode" jdbcType="VARCHAR"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="technology_id" property="technologyId" jdbcType="INTEGER"/>
        <result column="shibiao" property="shibiao" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseOperateResultMap" type="com.esst.ts.model.Operate">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="technology_id" property="technologyId" jdbcType="INTEGER"/>
        <result column="operate_code" property="operateCode" jdbcType="VARCHAR"/>
        <result column="operate_name" property="operateName" jdbcType="VARCHAR"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
    </resultMap>
    <update id="truncatetable">
        SET foreign_key_checks = 0;
        -- 风格
        TRUNCATE TABLE style;
        -- 时标
        TRUNCATE TABLE timescale;
        -- 产品
        TRUNCATE TABLE product;
        -- 工艺单元
        TRUNCATE TABLE technology;
        -- 产品工艺关系表
        TRUNCATE TABLE pro_tech_relation;
        -- 任务单
        TRUNCATE TABLE task;
        -- 工况
        TRUNCATE TABLE operate;
        -- 任务单工况关系表
        TRUNCATE TABLE task_oper_relation;
        -- 事故策略
        TRUNCATE TABLE trouble;
        -- 数据库中已有的任务单，默认所有老师均为发布状态
        TRUNCATE TABLE user_task_relation;

        TRUNCATE TABLE user_live;
        TRUNCATE TABLE user_token;
        TRUNCATE TABLE exam;
        TRUNCATE TABLE questions;
        TRUNCATE TABLE exam_user_relation;
        TRUNCATE TABLE user_login_log;
        TRUNCATE TABLE user_score_record;
        TRUNCATE TABLE detail_score;
        TRUNCATE TABLE user_live_data;
        TRUNCATE TABLE teacher_student_relation;

        truncate table `user`;

        SET foreign_key_checks = 1;

        DROP PROCEDURE IF EXISTS proc_insertTeacher; -- 如果存在此存储过程则删掉
        -- DELIMITER $
        CREATE PROCEDURE proc_insertTeacher(IN num INT)
        BEGIN
        DECLARE i INT DEFAULT 1;

        -- 插入未知老师
        INSERT INTO `user`(user_name,rel_name,`password`,`status`,is_admin,is_del)
        select 'teacher' user_name,'未知老师' rel_name,'670B14728AD9902AECBA32E22FA4F6BD' `password`,0 `status`,-1
        is_admin,0 is_del;

        WHILE num>=i DO
        -- 插入默认老师账号
        INSERT INTO `user`(user_name,rel_name,`password`,`status`,is_admin,is_del)
        select CONCAT('teacher',i) user_name,CONCAT('老师',i) rel_name,'670B14728AD9902AECBA32E22FA4F6BD' `password`,0
        `status`,1 is_admin,0 is_del;
        SET i = i+1;
        END WHILE;
        END
        ;
        CALL proc_insertTeacher(20);
        DROP PROCEDURE IF EXISTS proc_insertTeacher; -- 如果存在此存储过程则删掉
    </update>
    <insert id="insertProduct" parameterType="com.esst.ts.model.Product" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        INSERT INTO product(product_code,product_name,product_name2)
        select bv.* from (select #{productCode,jdbcType=VARCHAR} product_code,#{productName,jdbcType=VARCHAR}
        product_name,#{productName2,jdbcType=VARCHAR} product_name2) bv left join product p on
        p.product_code=bv.product_code and p.product_name=bv.product_name
        <where>p.id is null</where>
    </insert>
    <select id="getInsertProductModel" resultMap="BaseProductResultMap" parameterType="com.esst.ts.model.Product">
        INSERT INTO product(product_code,product_name,product_name2)
        select bv.* from (select #{productCode,jdbcType=VARCHAR} product_code,#{productName,jdbcType=VARCHAR}
        product_name,#{productName2,jdbcType=VARCHAR} product_name2) bv left join product p on
        p.product_code=bv.product_code and p.product_name=bv.product_name
        <where>p.id is null</where>;
        select * from product where product_code = #{productCode,jdbcType=VARCHAR} and
        product_name=#{productName,jdbcType=VARCHAR} LIMIT 0,1;
    </select>
    <insert id="insertTechnology" parameterType="com.esst.ts.model.Technology" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        INSERT INTO technology(technology_code,technology_zh_name,technology_en_name,style_id)
        values(#{technologyCode,jdbcType=VARCHAR},#{technologyZhName,jdbcType=VARCHAR}
        ,#{technologyEnName,jdbcType=VARCHAR},#{styleId,jdbcType=VARCHAR})
    </insert>
    <select id="getInsertTechnologyModel" resultMap="BaseTechnologyResultMap"
            parameterType="com.esst.ts.model.Technology">
        INSERT INTO technology(technology_code,technology_zh_name,technology_en_name,style_id)
        select bv.* from (select #{technologyCode,jdbcType=VARCHAR} technology_code,#{technologyZhName,jdbcType=VARCHAR}
        technology_zh_name,#{technologyEnName,jdbcType=VARCHAR} technology_en_name,#{styleId,jdbcType=VARCHAR} style_id)
        bv left join technology p on
        p.technology_zh_name=bv.technology_zh_name
        <where>p.id is null</where>;
        select * from technology where technology_zh_name = #{technologyZhName,jdbcType=VARCHAR} LIMIT 0,1;
    </select>
    <insert id="insertProTechRelation" parameterType="com.esst.ts.model.ProTechRelation">
        INSERT INTO pro_tech_relation(product_id, technology_id)
        select bv.* from (select #{productId,jdbcType=INTEGER} product_id, #{technologyId,jdbcType=INTEGER}
        technology_id) bv left join pro_tech_relation p on
        p.product_id=bv.product_id and p.technology_id=bv.technology_id
        <where>p.id is null</where>
    </insert>
    <insert id="insertTask" parameterType="com.esst.ts.model.Task" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        INSERT INTO task(task_code,task_name,technology_id,shibiao)
        values(#{taskCode,jdbcType=VARCHAR},#{taskName,jdbcType=VARCHAR}
        ,#{technologyId,jdbcType=INTEGER},#{shibiao,jdbcType=VARCHAR})
    </insert>
    <select id="getInsertTaskModel" resultMap="BaseTaskResultMap"
            parameterType="com.esst.ts.model.Task">
        INSERT INTO task(task_code,task_name,technology_id,shibiao)
        select bv.* from (select #{taskCode,jdbcType=VARCHAR} task_code,#{taskName,jdbcType=VARCHAR}
        task_name,#{technologyId,jdbcType=INTEGER} technology_id,#{shibiao,jdbcType=VARCHAR} shibiao)
        bv left join task p on
        p.technology_id=bv.technology_id and p.task_name=bv.task_name
        <where>p.id is null</where>;
        select * from task where technology_id = #{technologyId,jdbcType=INTEGER} and task_name =
        #{taskName,jdbcType=VARCHAR} LIMIT 0,1;
    </select>
    <insert id="insertOperate" parameterType="com.esst.ts.model.Operate" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into operate(technology_id,operate_name,operate_code,is_deleted)
        values (#{technologyId,jdbcType=INTEGER}, #{operateName,jdbcType=VARCHAR}, #{operateCode,jdbcType=VARCHAR}
        ,#{isDeleted,jdbcType=INTEGER})
    </insert>
    <select id="getInsertOperateModel" resultMap="BaseOperateResultMap"
            parameterType="com.esst.ts.model.Operate">
        insert into operate(technology_id,operate_name,operate_code,is_deleted)
        select bv.* from (select #{technologyId,jdbcType=INTEGER} technology_id,#{operateName,jdbcType=VARCHAR}
        operate_name,#{operateCode,jdbcType=VARCHAR}
        operate_code,#{isDeleted,jdbcType=INTEGER} is_deleted)
        bv left join operate p on
        p.technology_id=bv.technology_id and p.operate_name=bv.operate_name
        <where>p.id is null</where>;
        select * from operate where technology_id = #{technologyId,jdbcType=INTEGER} and operate_name =
        #{operateName,jdbcType=VARCHAR} LIMIT 0,1;
    </select>
    <insert id="insertUserTaskRelation" parameterType="com.esst.ts.model.UserTaskRelation">
        INSERT INTO user_task_relation(user_id,task_id,release_time)
        select bv.* from (select u.id user_id,#{taskId,jdbcType=INTEGER}
        task_id,REPLACE(unix_timestamp(current_timestamp(3)),'.','')
        release_time from `user` u where u.is_admin=1) bv left join user_task_relation p ON bv.user_id=p.user_id and
        bv.task_id=p.task_id
        <where>p.id is null</where>
    </insert>
    <insert id="insertTaskOperRelation" parameterType="com.esst.ts.model.TaskOperRelation">
        insert into task_oper_relation(task_id,operate_id)
        select bv.* from (select #{taskId,jdbcType=INTEGER} task_id,#{operateId,jdbcType=INTEGER} operate_id) bv left
        join task_oper_relation p on bv.task_id=p.task_id and bv.operate_id=p.operate_id
        <where>p.id is null</where>;
    </insert>

    <update id="insertDefoultSetting">
        INSERT INTO style(style_name,style_code)
        select '通用DCS 2005 版' style_name,'1' style_code
        union all select 'TDC3000风格' style_name,'2' style_code
        union all select '分析实验风格' style_name,'3' style_code
        union all select 'IA风格' style_name,'4' style_code
        union all select 'CS3000风格' style_name,'5' style_code
        union all select 'InTouch风格' style_name,'6' style_code
        union all select 'DeltaV风格' style_name,'7' style_code
        union all select 'Citect风格' style_name,'8' style_code
        union all select 'OASyS_SCADA风格' style_name,'9' style_code
        union all select 'PKS风格' style_name,'10' style_code
        union all select 'PKS_CN风格' style_name,'11' style_code
        union all select 'Freelance_2000风格' style_name,'12' style_code
        union all select '仪器分析2010' style_name,'13' style_code
        union all select 'DeltaV_New风格' style_name,'14' style_code
        union all select '通用DCS 2010 版' style_name,'15' style_code
        union all select 'PKS_New风格' style_name,'16' style_code
        union all select 'IA_New风格' style_name,'17' style_code
        union all select 'CS3000_New风格' style_name,'18' style_code
        union all select 'Freelance2000_New' style_name,'19' style_code
        union all select '测试DCS风格' style_name,'20' style_code
        union all select 'IA_HN风格' style_name,'21' style_code
        union all select 'Siemens PCS7' style_name,'22' style_code
        union all select 'System 800xA' style_name,'23' style_code
        union all select 'Siemens SG' style_name,'24' style_code
        union all select '实验风格' style_name,'25' style_code
        union all select '26' style_name,'26' style_code
        union all select '27' style_name,'27' style_code
        union all select '通用DCS2019' style_name,'28' style_code;
        insert into timescale(timescale_code,timescale_name)
        select '25' timescale_code,'25%' timescale_name
        union all select '50' timescale_code,'50%' timescale_name
        union all select '100' timescale_code,'100%' timescale_name
        union all select '200' timescale_code,'200%' timescale_name
        union all select '300' timescale_code,'300%' timescale_name
        union all select '400' timescale_code,'400%' timescale_name;
        INSERT INTO task(task_code,task_name,technology_id,shibiao)
        select t.id task_code,concat(t.technology_zh_name,'任务单') task_name,t.id technology_id, '100'
        shibiao from technology t;
        insert into task_oper_relation(task_id,operate_id)
        select technology_id task_id,id operate_id from operate;
        INSERT INTO trouble(trouble_name, trouble_code, technology)
        select '无事故' trouble_name, '0' trouble_code, id technology from technology order by id;
        INSERT INTO user_task_relation(user_id,task_id,release_time)
        select u.id user_id,t.id task_id,REPLACE(unix_timestamp(current_timestamp(3)),'.','') release_time from `user` u left join task t on 1=1 where u.is_admin=1
        and t.id is not null
        order by user_id,task_id;
    </update>
</mapper>