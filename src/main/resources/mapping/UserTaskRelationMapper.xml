<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.UserTaskRelationMapper">
    <resultMap id="BaseResultMap" type="com.esst.ts.model.UserTaskRelation">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="task_id" property="taskId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, task_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_task_relation
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_task_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.esst.ts.model.UserTaskRelation">
    insert into user_task_relation (id, user_id, task_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertTaskIds">
        delete from user_task_relation where user_id=#{userId};
        insert into user_task_relation (user_id, task_id,release_time)
        select bv.user_id,bv.task_id,REPLACE(unix_timestamp(current_timestamp(3)),'.','') release_time from (
        select 0 user_id, 0 task_id
        <foreach collection="idList" index="index" item="item" open="" separator="" close="">
            union
            select #{userId,jdbcType=INTEGER} user_id, #{item,jdbcType=INTEGER} task_id
        </foreach>
        ) bv left join user_task_relation eur on eur.user_id=bv.user_id and eur.task_id=bv.task_id
        where bv.user_id>0 and bv.task_id>0 and eur.id is null
    </insert>
    <delete id="deleteTaskIds">
        delete from user_task_relation
        <where>
            user_id=#{userId,jdbcType=INTEGER} and task_id in
            <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
                #{item,jdbcType=INTEGER}
            </foreach>
        </where>
    </delete>
    <insert id="insertSelective" parameterType="com.esst.ts.model.UserTaskRelation">
        insert into user_task_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                #{taskId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.esst.ts.model.UserTaskRelation">
        update user_task_relation
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.esst.ts.model.UserTaskRelation">
    update user_task_relation
    set user_id = #{userId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>