<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.ExamUserRelationMapper">
    <resultMap id="BaseResultMap" type="com.esst.ts.model.ExamUserRelation">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="exam_id" property="examId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, exam_id, user_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from exam_user_relation
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_user_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.esst.ts.model.ExamUserRelation">
    insert into exam_user_relation (id, exam_id, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.esst.ts.model.ExamUserRelation">
        insert into exam_user_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="examId != null">
                exam_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="examId != null">
                #{examId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.esst.ts.model.ExamUserRelation">
        update exam_user_relation
        <set>
            <if test="examId != null">
                exam_id = #{examId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.esst.ts.model.ExamUserRelation">
    update exam_user_relation
    set exam_id = #{examId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>