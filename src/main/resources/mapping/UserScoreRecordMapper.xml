<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.UserScoreRecordMapper" >
  <resultMap id="BasePOJOResultMap" type="com.esst.ts.model.UserScoreRecordPOJO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="operate_id" property="operateId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="total_score" property="totalScore" jdbcType="DOUBLE" />
    <result column="begin_time" property="beginTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="learn_time" property="learnTime" jdbcType="BIGINT" />
    <result column="study_type" property="studyType" jdbcType="INTEGER" />
    <result column="mac_address" property="macAddress" jdbcType="VARCHAR" />
    <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
    <result column="report" property="report" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="rel_name" property="userTrueName" jdbcType="VARCHAR" />
    <result column="st_num" property="userStNum" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.esst.ts.model.UserScoreRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="operate_id" property="operateId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="total_score" property="totalScore" jdbcType="DOUBLE" />
    <result column="begin_time" property="beginTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="study_type" property="studyType" jdbcType="INTEGER" />
    <result column="mac_address" property="macAddress" jdbcType="VARCHAR" />
    <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
    <result column="train_id" property="trainId" jdbcType="VARCHAR" />
    <result column="report" property="report" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, task_id, operate_id, score, total_score, begin_time, end_time, study_type,mac_address,ip_address,train_id,report,teacher_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_score_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_score_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.esst.ts.model.UserScoreRecord" >
    insert into user_score_record (id, user_id, task_id, 
      operate_id, score, total_score, 
      begin_time, end_time, study_type,
      mac_address, ip_address,train_id,
      report,teacher_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{operateId,jdbcType=INTEGER}, #{score,jdbcType=DOUBLE}, #{totalScore,jdbcType=DOUBLE}, 
      #{beginTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{studyType,jdbcType=INTEGER},
      #{macAddress,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR},#{trainId,jdbcType=VARCHAR},
      #{report,jdbcType=VARCHAR},#{teacherId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.esst.ts.model.UserScoreRecord" >
    insert into user_score_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="operateId != null" >
        operate_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="totalScore != null" >
        total_score,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="studyType != null" >
        study_type,
      </if>
      <if test="macAddress != null" >
        mac_address,
      </if>
      <if test="ipAddress != null" >
        ip_address,
      </if>
      <if test="trainId != null" >
        train_id,
      </if>
      <if test="report != null" >
        report,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="operateId != null" >
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="totalScore != null" >
        #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="studyType != null" >
        #{studyType,jdbcType=INTEGER},
      </if>
      <if test="macAddress != null" >
        #{macAddress,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null" >
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="trainId != null" >
        #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="report != null" >
        #{report,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.esst.ts.model.UserScoreRecord" >
    update user_score_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="operateId != null" >
        operate_id = #{operateId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="totalScore != null" >
        total_score = #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="studyType != null" >
        study_type = #{studyType,jdbcType=INTEGER},
      </if>
      <if test="macAddress != null" >
        mac_address = #{macAddress,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null" >
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="trainId != null" >
        train_id = #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="report != null" >
        report = #{report,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.esst.ts.model.UserScoreRecord" >
    update user_score_record
    set user_id = #{userId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      operate_id = #{operateId,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      total_score = #{totalScore,jdbcType=DOUBLE},
      begin_time = #{beginTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      study_type = #{studyType,jdbcType=INTEGER},
      mac_address = #{macAddress,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      train_id = #{trainId,jdbcType=VARCHAR},
      report = #{report,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>