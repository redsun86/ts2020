<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.ExamMapper">
    <resultMap id="BaseResultMap" type="com.esst.ts.model.Exam">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="exam_name" property="examName" jdbcType="VARCHAR"/>
        <result column="exam_attribute" property="examAttribute" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, exam_name, status, create_user
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from exam
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.esst.ts.model.Exam">
    insert into exam (id, exam_name, exam_attribute,
      status, create_user)
    values (#{id,jdbcType=INTEGER}, #{examName,jdbcType=VARCHAR}, #{examAttribute,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER});
  </insert>
    <insert id="insertSelective" parameterType="com.esst.ts.model.Exam">
        insert into exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="examName != null">
                exam_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="examName != null">
                #{examName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">insert
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.esst.ts.model.Exam">
        update exam
        <set>
            <if test="examName != null">
                exam_name = #{examName,jdbcType=VARCHAR},
            </if>
            <if test="examAttribute != null">
                exam_attribute = #{examAttribute,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.esst.ts.model.Exam">
    update exam
    set exam_name = #{examName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateStatus">
        <if test="status == 1">
            UPDATE exam SET status=0 where create_User=#{userId} and is_deleted=0;
        </if>
        UPDATE exam SET status=#{status}
        <where>
            create_User=#{userId} and is_deleted=0 and id in
            <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <select id="getInsertModel" resultMap="BaseResultMap" parameterType="com.esst.ts.model.Exam">
        insert into exam (exam_name, exam_attribute,status, create_user)
        values (#{examName,jdbcType=VARCHAR}, #{examAttribute,jdbcType=INTEGER},#{status,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER});
        select * from exam where id = @@IDENTITY;
</select>
    <resultMap id="BaseResultPOJOMap" type="com.esst.ts.model.ExamPOJO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="exam_name" property="examName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="status_name" property="statusName" jdbcType="VARCHAR"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="user_count" property="userCount" jdbcType="INTEGER"/>
        <result column="exam_attribute" property="examAttribute" jdbcType="INTEGER"/>
        <result column="questions_count" property="questionsCount" jdbcType="INTEGER"/>
        <result column="edit_info" property="editInfo" jdbcType="INTEGER"/>
    </resultMap>
    <select id="GetList" resultMap="BaseResultPOJOMap" parameterType="com.esst.ts.model.Exam">
        select e.id,e.exam_name,e.`status`,e.create_user,ifnull(uc.user_count,0) user_count,e.exam_attribute
        ,(case e.`status` when 1 then '发布' else '未发布' end) status_name,ifnull(eq.questionsCount,0) questionsCount
        ,concat((case e.exam_attribute when 1 then '考试' else '联合操作' end),'，',ifnull(eq.questionsCount,0),'题'
        ,(case e.exam_attribute when 1 then CONCAT('，',ifnull(eq.time_limit,0),'分钟') else '，不限时' end)) edit_info
        from exam e
        LEFT JOIN (select exam_id,count(distinct user_id) user_count from exam_user_relation group by exam_id) uc
        on e.id=uc.exam_id
        LEFT JOIN (select exame_id,count(id) questionsCount,sum(time_limit) time_limit
        from questions where is_deleted=0 GROUP BY exame_id) eq on eq.exame_id=e.id
        where e.id>0
        <if test="id != null">
            and e.id=#{id,jdbcType=INTEGER}
        </if>
        <if test="isDeleted != null">
            and e.is_deleted=#{isDeleted,jdbcType=INTEGER}
        </if>
        <if test="examName != null">
            and e.exam_name like CONCAT('%', #{examName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="createUser != null">
            and e.create_user=#{createUser,jdbcType=INTEGER}
        </if>
        <if test='status != null'>
            and e.`status`=#{status,jdbcType=INTEGER}
        </if>
    </select>
    <select id="GetListWithStudent" resultMap="BaseResultPOJOMap" parameterType="com.esst.ts.model.Exam">
        select e.id,concat(u.rel_name,'老师：',e.exam_name) exam_name,e.`status`,e.create_user,ifnull(uc.user_count,0) user_count,e.exam_attribute
        ,(case e.`status` when 1 then '发布' else '未发布' end) status_name,ifnull(eq.questionsCount,0) questionsCount
        ,concat((case e.exam_attribute when 1 then '考试' else '联合操作' end),'，',ifnull(eq.questionsCount,0),'题'
        ,(case e.exam_attribute when 1 then CONCAT('，',ifnull(eq.time_limit,0),'分钟') else '，不限时' end)) edit_info
        from exam e
        LEFT JOIN `user` u ON e.create_user=u.id
        LEFT JOIN (select exam_id,count(distinct user_id) user_count from exam_user_relation group by exam_id) uc
        on e.id=uc.exam_id
        LEFT JOIN (select exame_id,count(id) questionsCount,sum(time_limit) time_limit
        from questions where is_deleted=0 GROUP BY exame_id) eq on eq.exame_id=e.id
        <if test='createUser != null'>
            LEFT JOIN (select exam_id,user_id from exam_user_relation GROUP BY exam_id,user_id) eur on eur.exam_id=e.id
            and eur.user_id=#{createUser,jdbcType=INTEGER}
        </if>
        where e.id>0
        <if test="id != null">
            and e.id=#{id,jdbcType=INTEGER}
        </if>
        <if test="isDeleted != null">
            and e.is_deleted=#{isDeleted,jdbcType=INTEGER}
        </if>
        <if test="examName != null">
            and e.exam_name like CONCAT('%', #{examName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="createUser != null">
            and eur.user_id>0
        </if>
        <if test='status != null'>
            and e.`status`=#{status,jdbcType=INTEGER}
        </if>
    </select>
</mapper>