<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.StatisticalMapper">
    <resultMap id="BaseResultMap" type="com.esst.ts.model.StatisticalChartDataPOJO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="xAxis" property="xAxis" jdbcType="VARCHAR"/>
        <result column="yAxis" property="yAxis" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="GetListWithDaBiaoLv1" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select nobv.xAxis,u.yAxis  from
        (select count(user_id) yAxis from exam_user_relation where exam_id=#{exameId,jdbcType=INTEGER}) u
        left join (
        select
        count(distinct tsr.user_id) xAxis
        from
        (select user_id from exam_user_relation where exam_id=#{exameId,jdbcType=INTEGER}) tsr
        left join (select id,question_name,exame_id from questions where exame_id=#{exameId,jdbcType=INTEGER}) q on 1=1
        left join (
        select max(id) id,max(current_score) current_score,user_id,task_id,operate_id,study_type
        ,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') >= date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d') >= date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv on tsr.user_id=studybv.user_id and q.exame_id=studybv.task_id and q.id=studybv.operate_id
        where (case when ifnull(studybv.current_score,0)>50 then 1 else 0 end)=0
        ) nobv on 1=1
    </select>
    <select id="GetListWithDaBiaoLv2" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select nobv.xAxis,u.yAxis from
        (select count(student_id) yAxis from teacher_student_relation
        where teacher_id=#{userId,jdbcType=INTEGER} and is_del=0) u
        left join (
        select
        count(distinct tsr.student_id) xAxis
        from
        (select student_id from teacher_student_relation where teacher_id=#{userId,jdbcType=INTEGER} and is_del=0) tsr
        left join (select tor.task_id,o.id operate_id,o.operate_name from task_oper_relation tor
        left join operate o on tor.operate_id=o.id where tor.task_id=#{exameId,jdbcType=INTEGER}) q on 1=1
        left join (
        select max(id) id,max(current_score) current_score,user_id,task_id,operate_id,study_type
        ,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')>=
        date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d')>=
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv on tsr.student_id=studybv.user_id and q.task_id=studybv.task_id and q.operate_id=studybv.operate_id
        where (case when ifnull(studybv.current_score,0)>50 then 1 else 0 end)=0
        ) nobv on 1=1
    </select>
    <select id="GetListWithBaoGao1" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select yesbv.xAxis,u.yAxis from
        (select count(user_id) yAxis from exam_user_relation where exam_id=#{exameId,jdbcType=INTEGER}) u
        left join (
        select count(distinct uld.user_id) xAxis from (
        select max(id) id,max(current_score) current_score,user_id,task_id,operate_id,study_type
        ,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')>=
        date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d')>=
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv left join user_live_data uld on studybv.id=uld.id
        where (case when uld.report is null then 0 when uld.report='' then 0 else 1 end)=1
        ) yesbv on 1=1
    </select>
    <select id="GetListWithBaoGao2" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select yesbv.xAxis,u.yAxis from
        (select count(student_id) yAxis from teacher_student_relation
        where teacher_id=#{userId,jdbcType=INTEGER} and is_del=0) u
        left join (
        select count(distinct uld.user_id) xAxis from (
        select max(id) id,max(current_score) current_score,user_id,task_id,operate_id,study_type
        ,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') >=
        date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d') >=
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv left join user_live_data uld on studybv.id=uld.id
        where (case when uld.report is null then 0 when uld.report='' then 0 else 1 end)=1
        ) yesbv on 1=1;
    </select>
    <select id="GetListWithShiChang" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select bv.xAxis,ifnull(datav.yAxis,0) yAxis from
        (select 1 xAxis_id,'小于10分钟' xAxis
        union all select 2 xAxis_id,'10~20分钟' xAxis
        union all select 3 xAxis_id,'20~30分钟' xAxis
        union all select 4 xAxis_id,'30~40分钟' xAxis
        union all select 5 xAxis_id,'40分钟以上' xAxis
        ) bv left join (
        select bv.xAxis_id,count(0) yAxis
        from (
        select studybv.user_id,studybv.task_id,sum(uld.study_duration) study_duration
        ,(case
        when 10*60*1000>=sum(uld.study_duration) then 1
        when sum(uld.study_duration)>10*60*1000 and 20*60*1000 >= sum(uld.study_duration) then 2
        when sum(uld.study_duration)>20*60*1000 and 30*60*1000 >= sum(uld.study_duration) then 3
        when sum(uld.study_duration)>30*60*1000 and 40*60*1000 >= sum(uld.study_duration) then 4
        else 5 end) xAxis_id
        from (
        select max(id) id,max(current_score)
        current_score,user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')>=date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and
        date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d')>=date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv left join user_live_data uld on studybv.id=uld.id
        group by studybv.user_id,studybv.task_id
        ) bv group by bv.xAxis_id
        ) datav on bv.xAxis_id=datav.xAxis_id;
    </select>
    <select id="GetListWithChengJi" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select o.xAxis,ifnull(bv.yAxis,0) yAxis from
        (select 1 xAxis_id,'小于50' xAxis
        union all select 2 xAxis_id,'50~100' xAxis
        union all select 3 xAxis_id,'100~150' xAxis
        union all select 4 xAxis_id,'150~200' xAxis
        union all select 5 xAxis_id,'200' xAxis
        ) o left join (
        select avgv.xAxis_id,count(0) yAxis from (
        select studybv.user_id,studybv.task_id,sum(studybv.current_score) current_score
        ,(case
        when 50>=sum(studybv.current_score) then 1
        when sum(studybv.current_score) > 50 and 100 >= sum(studybv.current_score) then 2
        when sum(studybv.current_score) > 100 and 150 >= sum(studybv.current_score) then 3
        when sum(studybv.current_score) > 150 and 200 >= sum(studybv.current_score) then 4
        else 5 end) xAxis_id
        from (
        select max(id) id,max(current_score)
        current_score,user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')>=date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and
        date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d')>=date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv
        group by studybv.user_id,studybv.task_id
        ) avgv group by avgv.xAxis_id
        ) bv on o.xAxis_id=bv.xAxis_id;
    </select>
    <select id="GetListWithPingJun1" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select o.question_name xAxis,ifnull(bv.avg_score,0) yAxis
        from (select * from questions where exame_id=#{exameId,jdbcType=INTEGER}) o
        left join
        (
        select studybv.task_id,studybv.operate_id,studybv.study_type
        ,cast(sum(studybv.current_score)/count(0) as decimal(18,2)) avg_score from
        (
        select max(id) id,max(current_score) current_score,user_id,task_id,operate_id,study_type
        ,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')>=
        date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d')>=
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv
        group by studybv.task_id,studybv.operate_id,studybv.study_type
        ) bv on bv.operate_id=o.id;
    </select>
    <select id="GetListWithPingJun2" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select o.operate_name xAxis,ifnull(bv.avg_score,0) yAxis
        from (select operate_id from task_oper_relation where task_id=#{exameId,jdbcType=INTEGER}) tor left join operate o on tor.operate_id=o.id
        left join
        (
        select studybv.task_id,studybv.operate_id,studybv.study_type
        ,cast(sum(studybv.current_score)/count(0) as decimal(18,2)) avg_score from
        (
        select max(id) id,max(current_score) current_score,user_id,task_id,operate_id,study_type
        ,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d') start_date
        from user_live_data
        where study_type=#{studyType,jdbcType=INTEGER} and task_id=#{exameId,jdbcType=INTEGER}
        and date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')>=
        date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
        and date_format(#{stopTime,jdbcType=VARCHAR},'%Y.%m.%d')>=
        date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        group by user_id,task_id,operate_id,study_type,date_format(FROM_UNIXTIME(start_time/1000),'%Y.%m.%d')
        ) studybv
        group by studybv.task_id,studybv.operate_id,studybv.study_type
        ) bv on bv.operate_id=o.id;
    </select>
    <select id="GetDefaultModel" resultMap="BaseResultMap" parameterType="com.esst.ts.model.StatisticalPOJO">
        select uld.task_id xAxis,uld.study_type yAxis,count(distinct uld.user_id) userCount,date_format(FROM_UNIXTIME(uld.start_time/1000),'%Y.%m.%d') study_date
        from user_live_data uld
        where date_format(FROM_UNIXTIME(uld.start_time/1000),'%Y.%m.%d')>=date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')
            and date_format(#{startTime,jdbcType=VARCHAR},'%Y.%m.%d')>=date_format(FROM_UNIXTIME(uld.start_time/1000),'%Y.%m.%d')
        GROUP BY uld.task_id,uld.study_type,date_format(FROM_UNIXTIME(uld.start_time/1000),'%Y.%m.%d')
        ORDER BY userCount DESC
        limit 0,1
    </select>

</mapper>